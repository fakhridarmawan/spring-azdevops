# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  name: 'Default'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: x64
    goals: 'package'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'specific'
    itemPattern: '**.war'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: Docker@2
  inputs:
    repository: spring-starter
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 
      latest
- task: CmdLine@2
  inputs:
    script: |
      oc login -u developer -p developer https://api.crc.testing:6443 --insecure-skip-tls-verify=true
      docker login -u openshift -p $(oc whoami -t) default-route-openshift-image-registry.apps-crc.testing --tls-verify=false
      docker push spring-starter default-route-openshift-image-registry.apps-crc.testing/spring/spring-starter:latest --tls-verify=false
